# HG changeset patch
# Parent 3aaae370b893ae5c0f36a546facdbb30eec8b969
# User Joe Walker <jwalker@mozilla.com>
Bug 685135 - GCLI should display popup hints in a column left of the console output

diff --git a/browser/devtools/webconsole/HUDService.jsm b/browser/devtools/webconsole/HUDService.jsm
--- a/browser/devtools/webconsole/HUDService.jsm
+++ b/browser/devtools/webconsole/HUDService.jsm
@@ -2622,7 +2622,7 @@ HUD_SERVICE.prototype =
       let hudId = getHudIdFromNode(aParentNode);
       let doc = aParentNode.ownerDocument;
 
-      var gcliterm = new GcliTerm(context, hudId, doc, aConsole);
+      var gcliterm = new GcliTerm(context, hudId, doc, aConsole, this.hintNode);
       aParentNode.appendChild(gcliterm.element);
     }
 
@@ -3498,7 +3498,7 @@ HeadsUpDisplay.prototype = {
       }
       else {
         this.gcliterm = new GcliTerm(context, this.hudId, this.chromeDocument,
-                                     this.console);
+                                     this.console, this.hintNode);
         aParentNode.appendChild(this.gcliterm.element);
       }
     }
@@ -3576,6 +3576,39 @@ HeadsUpDisplay.prototype = {
     consoleWrap.setAttribute("class", "hud-console-wrapper");
     consoleWrap.setAttribute("flex", "1");
 
+    this.filterSpacer = this.makeXULNode("spacer");
+    this.filterSpacer.setAttribute("flex", "1");
+
+    this.filterBox = this.makeXULNode("textbox");
+    this.filterBox.setAttribute("class", "compact hud-filter-box");
+    this.filterBox.setAttribute("hudId", this.hudId);
+    this.filterBox.setAttribute("placeholder", this.getStr("stringFilter"));
+    this.filterBox.setAttribute("type", "search");
+
+    this.setFilterTextBoxEvents();
+
+    this.createConsoleMenu(this.consoleWrap);
+
+    this.filterPrefs = HUDService.getDefaultFilterPrefs(this.hudId);
+
+    let consoleFilterToolbar = this.makeFilterToolbar();
+    consoleFilterToolbar.setAttribute("id", "viewGroup");
+    this.consoleFilterToolbar = consoleFilterToolbar;
+
+    let hintSpacerNode = this.makeXULNode("box");
+    hintSpacerNode.setAttribute("flex", 1);
+
+    this.hintNode = this.makeXULNode("div");
+    this.hintNode.setAttribute("class", "gcliterm-hint-node");
+
+    let hintParentNode = this.makeXULNode("vbox");
+    hintParentNode.setAttribute("flex", "0");
+    hintParentNode.appendChild(hintSpacerNode);
+    hintParentNode.appendChild(this.hintNode);
+
+    let hbox = this.makeXULNode("hbox");
+    hbox.setAttribute("flex", "1");
+
     this.outputNode = this.makeXULNode("richlistbox");
     this.outputNode.setAttribute("class", "hud-output-node");
     this.outputNode.setAttribute("flex", "1");
@@ -3584,27 +3617,11 @@ HeadsUpDisplay.prototype = {
     this.outputNode.setAttribute("style", "direction: ltr;");
     this.outputNode.setAttribute("seltype", "multiple");
 
-    this.filterSpacer = this.makeXULNode("spacer");
-    this.filterSpacer.setAttribute("flex", "1");
-
-    this.filterBox = this.makeXULNode("textbox");
-    this.filterBox.setAttribute("class", "compact hud-filter-box");
-    this.filterBox.setAttribute("hudId", this.hudId);
-    this.filterBox.setAttribute("placeholder", this.getStr("stringFilter"));
-    this.filterBox.setAttribute("type", "search");
-
-    this.setFilterTextBoxEvents();
-
-    this.createConsoleMenu(this.consoleWrap);
-
-    this.filterPrefs = HUDService.getDefaultFilterPrefs(this.hudId);
-
-    let consoleFilterToolbar = this.makeFilterToolbar();
-    consoleFilterToolbar.setAttribute("id", "viewGroup");
-    this.consoleFilterToolbar = consoleFilterToolbar;
+    hbox.appendChild(hintParentNode);
+    hbox.appendChild(this.outputNode);
+
     consoleWrap.appendChild(consoleFilterToolbar);
-
-    consoleWrap.appendChild(this.outputNode);
+    consoleWrap.appendChild(hbox);
 
     outerWrap.appendChild(consoleWrap);
 
@@ -6825,15 +6842,17 @@ catch (ex) {
  *        The DOM document from which to create nodes
  * @param object aConsole
  *        Console object to use within the GcliTerm
+ * @param nsIDOMElement aHintNode
+ *        The node to which we add GCLI's hints
  * @constructor
  */
 function GcliTerm(aContext, aHudId, aDocument, aConsole, aHintNode)
 {
-  this.hintNode = aHintNode;
   this.context = aContext;
   this.hudId = aHudId;
   this.document = aDocument;
   this.console = aConsole;
+  this.hintNode = aHintNode;
 
   this.createUI();
   this.createSandbox();
@@ -6848,6 +6867,7 @@ function GcliTerm(aContext, aHudId, aDoc
     inputElement: this.inputNode,
     completeElement: this.completeNode,
     inputBackgroundElement: this.inputStack,
+    hintElement: this.hintNode,
     completionPrompt: ""
   });
 }
@@ -6879,6 +6899,7 @@ GcliTerm.prototype = {
   {
     this.element = this.document.createElement("vbox");
     this.element.setAttribute("class", "gcliterm-input-container");
+    this.element.setAttribute("flex", "0");
 
     this.inputStack = this.document.createElement("stack");
     this.inputStack.setAttribute("class", "gcliterm-stack-node");
diff --git a/toolkit/themes/winstripe/global/webConsole.css b/toolkit/themes/winstripe/global/webConsole.css
--- a/toolkit/themes/winstripe/global/webConsole.css
+++ b/toolkit/themes/winstripe/global/webConsole.css
@@ -344,6 +344,18 @@
   width: 100%;
 }
 
+.gcliterm-hint-node {
+  color: #000;
+  background: rgba(250, 250, 250, 0.8);
+  border: 1px solid #AAA;
+  border-top-right-radius: 5px;
+  border-top-left-radius: 5px;
+  margin-left: 10px;
+  margin-right: 10px;
+  display: inline-block;
+  overflow: hidden;
+}
+
 .gcliterm-input-node,
 .gcliterm-complete-node {
   background: transparent;
